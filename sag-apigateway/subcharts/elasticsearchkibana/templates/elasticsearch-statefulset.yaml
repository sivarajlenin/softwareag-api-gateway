---
# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "apigateway.customPrefix" . }}{{ .Values.elasticSearchStatefulsetName }}
  labels:
    {{- include "apigateway.labels" . | nindent 4 }}
spec:
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: es-{{ .Values.global.app }}
  serviceName: {{ include "apigateway.customPrefix" . }}{{ .Values.elasticSearchDiscoveryService }}
  replicas: {{ int .Values.clusterSize }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: es-{{ .Values.global.app }}
        {{- include "apigateway.labels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: init-sysctl
        image: {{ .Values.simpleLinuxImage }}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.resources.esInitContainer | nindent 10 }}
        securityContext:
          privileged: true
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
      - name: elasticsearch
        image: {{ .Values.elasticImage }}:{{ .Values.elasticTag }}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.resources.esContainer | nindent 10 }}
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /_cluster/health?local=true
            port: {{ int .Values.elasticSearchPort }}
          initialDelaySeconds: 5
        ports:
        - containerPort: {{ int .Values.elasticSearchPort }}
          name: es-http
        - containerPort: {{ int .Values.elasticSearchPublishPort }}
          name: es-transport
        volumeMounts:
        {{- if not .Values.global.trialUsage }}
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
        {{- end }}
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      imagePullSecrets:
      - name: {{ .Values.global.registryCredentialsName }}
      volumes:
        - name: elasticsearch-config
          configMap:
            name: {{ include "apigateway.customPrefix" . }}{{ .Values.elasticSearchConfigmap }}
            items:
              - key: elasticsearch.yml
                path: elasticsearch.yml
  
  {{- if not .Values.global.trialUsage }}
  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.storageClassName }}
      storageClassName: {{ .Values.storageClassName | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.storageRequest }}
  {{- end }}
