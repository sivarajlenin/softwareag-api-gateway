---
# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.global.app }}
    {{- include "apigateway.labels" . | nindent 4 }}
  name: {{ include "apigateway.customPrefix" . }}apigateway
spec:
  replicas: {{ .Values.apigwClusterSize }}
  selector:
    matchLabels:
      app: {{ .Values.global.app }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.global.app }}
        {{- include "apigateway.labels" . | nindent 8 }}
    spec:
      initContainers:
      - name: waitforelasticsearch
        image: {{ .Values.global.curlImage }}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.resources.apigwInitContainer | nindent 10 }}
        command:
          - sh
          - -ec
          - |
                  pwd
                  whoami
                  ls -l
                  {{- $esUrl := printf "http://%s%s:%s/_cluster/health?pretty" ( include "apigateway.customPrefix" . ) .Values.elasticsearchkibana.elasticSearchService ( .Values.elasticsearchkibana.elasticSearchPort | toString) }}
                  curl -s {{ $esUrl }} | tee /tmp/tmpfile
                  until  grep "number_of_nodes" /tmp/tmpfile | grep {{ int .Values.elasticsearchkibana.clusterSize }} || grep "status" /tmp/tmpfile | grep "green" ; do
                    echo "waiting for {{ include "apigateway.customPrefix" . }}{{ .Values.elasticsearchkibana.elasticSearchService }}: status not yet 'green', or 'number_of_nodes' not yet {{ int .Values.elasticsearchkibana.clusterSize }}"
                    sleep 2
                    curl -s {{ $esUrl }} | tee /tmp/tmpfile
                  done
      containers:
      - name:  {{ .Values.global.app }}
        image: {{ .Values.apigwImage }}:{{ .Values.apigwTag }}
        imagePullPolicy: Always
        resources:
          {{- toYaml .Values.resources.apigwContainer | nindent 10 }}
        ports:
        - containerPort: {{ int .Values.apigwRuntimePort }}
          name: rt-port
          protocol: TCP
        - containerPort: 9999
          name: diag-port
          protocol: TCP
        - containerPort: {{ int .Values.apigwUiPort }}
          name: ui-http
          protocol: TCP

        livenessProbe:
          tcpSocket:
            port: {{ int .Values.apigwRuntimePort }}
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1

        readinessProbe:
          httpGet:
            path: /rest/apigateway/health
            port: {{ int .Values.apigwRuntimePort }}
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1

        volumeMounts:
          - name: apigw-config
            mountPath: /opt/softwareag/IntegrationServer/instances/{{ .Values.global.integrationServerInstanceName }}/packages/WmAPIGateway/resources/configuration
          - name: apigw-license
            mountPath: /opt/softwareag/IntegrationServer/instances/{{ .Values.global.integrationServerInstanceName }}/config/licenseKey.xml
            subPath:   licenseKey.xml
            readOnly:  false
      imagePullSecrets:
      - name: {{ .Values.global.registryCredentialsName }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ .Values.clusterDiscoveryAccount }}
      volumes:
      - name: apigw-config
        configMap:
          name: {{ include "apigateway.customPrefix" . }}{{ .Values.apigwConfigmap }}
          items:
          - key:  config-sources.yml
            path: config-sources.yml
          - key:  elasticsearch.yml
            path: elasticsearch.yml
          - key:  ignite-settings.yml
            path: ignite-settings.yml
      - name: apigw-license
        configMap:
          name: {{ .Values.apigwLicenseConfig }}
          defaultMode: 0666
          items:
          - key:  {{ .Values.apigwLicenseFilename }}
            path: licenseKey.xml
