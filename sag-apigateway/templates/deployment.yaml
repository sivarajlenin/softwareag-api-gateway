apiVersion: apps/v1
kind: Deployment
metadata:
  name: sag-apigateway-deployment
  labels:
{{ include "apigateway.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "apigateway.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "apigateway.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{ if .Values.elasticsearch_external }}
        - name: "apigw_elasticsearch_hosts"
          value: "{{ .Values.elasticsearch_external.host }}"
        - name: "apigw_elasticsearch_https_enabled"
          value: "{{ .Values.elasticsearch_external.https }}"
        - name: "apigw_elasticsearch_http_username"
          value: "{{ .Values.elasticsearch_external.username }}"
        - name: "apigw_elasticsearch_http_password"
          value: "{{ .Values.elasticsearch_external.password }}"
        {{ else if .Values.elasticsearch_sidecar }}
        - name: "apigw_elasticsearch_hosts"
          value: "localhost:9200"
        - name: "apigw_elasticsearch_https_enabled"
          value: "false"
        - name: "apigw_elasticsearch_http_username"
          value: 
        - name: "apigw_elasticsearch_http_password"
          value:
        {{ end }}
        {{if .Values.terracotta_host }}
        - name: "apigw_cluster_tsaUrls"
          value: {{ .Values.terracotta_host }}
        - name: apigw_terracotta_license_filename
          value: terracotta-license.key
        {{ end }}
        ports:
          - containerPort: {{ .Values.is.port }}
            name: "{{ .Values.is.port }}tcp"
            protocol: TCP
          - containerPort: {{ .Values.apigateway.port }}
            name: "{{ .Values.apigateway.port }}tcp"
            protocol: TCP 
          {{ if and (not .Values.elasticsearch_external) (not .Values.elasticsearch_sidecar) }}
          - containerPort: {{ .Values.elasticsearch_embedded.port }}
            name: "{{ .Values.elasticsearch_embedded.port }}tcp"
            protocol: TCP
          {{ end }}
        livenessProbe:
          failureThreshold: 4
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: {{ .Values.is.port }}
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /rest/apigateway/health
            port: {{ .Values.is.port }}
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 2
      {{ if and .Values.elasticsearch_sidecar (not .Values.elasticsearch_external)}}
      - name: elastic-search
        image: "{{ .Values.elasticsearch_sidecar.image }}:{{ .Values.elasticsearch_sidecar.tag}}"
        imagePullPolicy: {{ .Values.image.pullPolicy}}
        env:
        - name: "xpack.security.enabled"
          value: "false"
        - name: "node.name"
          value: "elasticsearch"
        - name: "discovery.seed_hosts" 
          value: "elasticsearch:9300"
        - name: "cluster.initial_master_nodes"
          value: "elasticsearch"
        ports:
        - containerPort: 9200
          name: "9200tcp"
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          tcpSocket:
            port: 9200
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          tcpSocket:
            port: 9200 
          timeoutSeconds: 2
      {{ end }}
      resources:
       {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
